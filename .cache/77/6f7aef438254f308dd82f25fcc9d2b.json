{"id":"node_modules/raven-js/src/console.js","dependencies":[{"name":"/home/ayoub/Documents/newStructure/new-frontend/package.json","includedInParent":true,"mtime":1540499147941},{"name":"/home/ayoub/Documents/newStructure/new-frontend/node_modules/raven-js/package.json","includedInParent":true,"mtime":1539094726284},{"name":"./utils","loc":{"line":1,"column":20},"parent":"/home/ayoub/Documents/newStructure/new-frontend/node_modules/raven-js/src/console.js","resolved":"/home/ayoub/Documents/newStructure/new-frontend/node_modules/raven-js/src/utils.js"}],"generated":{"js":"var utils = require('./utils');\n\nvar wrapMethod = function(console, level, callback) {\n  var originalConsoleLevel = console[level];\n  var originalConsole = console;\n\n  if (!(level in console)) {\n    return;\n  }\n\n  var sentryLevel = level === 'warn' ? 'warning' : level;\n\n  console[level] = function() {\n    var args = [].slice.call(arguments);\n\n    var msg = utils.safeJoin(args, ' ');\n    var data = {level: sentryLevel, logger: 'console', extra: {arguments: args}};\n\n    if (level === 'assert') {\n      if (args[0] === false) {\n        // Default browsers message\n        msg =\n          'Assertion failed: ' + (utils.safeJoin(args.slice(1), ' ') || 'console.assert');\n        data.extra.arguments = args.slice(1);\n        callback && callback(msg, data);\n      }\n    } else {\n      callback && callback(msg, data);\n    }\n\n    // this fails for some browsers. :(\n    if (originalConsoleLevel) {\n      // IE9 doesn't allow calling apply on console functions directly\n      // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193\n      Function.prototype.apply.call(originalConsoleLevel, originalConsole, args);\n    }\n  };\n};\n\nmodule.exports = {\n  wrapMethod: wrapMethod\n};\n","map":{"mappings":[{"source":"node_modules/raven-js/src/console.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/raven-js/src/console.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}}],"sources":{"node_modules/raven-js/src/console.js":"var utils = require('./utils');\n\nvar wrapMethod = function(console, level, callback) {\n  var originalConsoleLevel = console[level];\n  var originalConsole = console;\n\n  if (!(level in console)) {\n    return;\n  }\n\n  var sentryLevel = level === 'warn' ? 'warning' : level;\n\n  console[level] = function() {\n    var args = [].slice.call(arguments);\n\n    var msg = utils.safeJoin(args, ' ');\n    var data = {level: sentryLevel, logger: 'console', extra: {arguments: args}};\n\n    if (level === 'assert') {\n      if (args[0] === false) {\n        // Default browsers message\n        msg =\n          'Assertion failed: ' + (utils.safeJoin(args.slice(1), ' ') || 'console.assert');\n        data.extra.arguments = args.slice(1);\n        callback && callback(msg, data);\n      }\n    } else {\n      callback && callback(msg, data);\n    }\n\n    // this fails for some browsers. :(\n    if (originalConsoleLevel) {\n      // IE9 doesn't allow calling apply on console functions directly\n      // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193\n      Function.prototype.apply.call(originalConsoleLevel, originalConsole, args);\n    }\n  };\n};\n\nmodule.exports = {\n  wrapMethod: wrapMethod\n};\n"},"lineCount":43}},"hash":"4f7828ade1912855508d75d458ef296f","cacheData":{"env":{}}}